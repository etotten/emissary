// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v3alpha1

import (
	"github.com/datawire/ambassador/v2/pkg/api/getambassador.io/v2"
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACMEProviderSpec) DeepCopyInto(out *ACMEProviderSpec) {
	*out = *in
	if in.PrivateKeySecret != nil {
		in, out := &in.PrivateKeySecret, &out.PrivateKeySecret
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACMEProviderSpec.
func (in *ACMEProviderSpec) DeepCopy() *ACMEProviderSpec {
	if in == nil {
		return nil
	}
	out := new(ACMEProviderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddedHeader) DeepCopyInto(out *AddedHeader) {
	*out = *in
	if in.String != nil {
		in, out := &in.String, &out.String
		*out = new(string)
		**out = **in
	}
	if in.Bool != nil {
		in, out := &in.Bool, &out.Bool
		*out = new(bool)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(v2.UntypedDict)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddedHeader.
func (in *AddedHeader) DeepCopy() *AddedHeader {
	if in == nil {
		return nil
	}
	out := new(AddedHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorHost) DeepCopyInto(out *AmbassadorHost) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(AmbassadorHostSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorHost.
func (in *AmbassadorHost) DeepCopy() *AmbassadorHost {
	if in == nil {
		return nil
	}
	out := new(AmbassadorHost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AmbassadorHost) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorHostList) DeepCopyInto(out *AmbassadorHostList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AmbassadorHost, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorHostList.
func (in *AmbassadorHostList) DeepCopy() *AmbassadorHostList {
	if in == nil {
		return nil
	}
	out := new(AmbassadorHostList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AmbassadorHostList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorHostSpec) DeepCopyInto(out *AmbassadorHostSpec) {
	*out = *in
	if in.AmbassadorID != nil {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		*out = make(v2.AmbassadorID, len(*in))
		copy(*out, *in)
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.AcmeProvider != nil {
		in, out := &in.AcmeProvider, &out.AcmeProvider
		*out = new(v2.ACMEProviderSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSSecret != nil {
		in, out := &in.TLSSecret, &out.TLSSecret
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.RequestPolicy != nil {
		in, out := &in.RequestPolicy, &out.RequestPolicy
		*out = new(RequestPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.PreviewUrl != nil {
		in, out := &in.PreviewUrl, &out.PreviewUrl
		*out = new(PreviewURLSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSContext != nil {
		in, out := &in.TLSContext, &out.TLSContext
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(v2.TLSConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorHostSpec.
func (in *AmbassadorHostSpec) DeepCopy() *AmbassadorHostSpec {
	if in == nil {
		return nil
	}
	out := new(AmbassadorHostSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorHostStatus) DeepCopyInto(out *AmbassadorHostStatus) {
	*out = *in
	if in.ErrorTimestamp != nil {
		in, out := &in.ErrorTimestamp, &out.ErrorTimestamp
		*out = (*in).DeepCopy()
	}
	if in.ErrorBackoff != nil {
		in, out := &in.ErrorBackoff, &out.ErrorBackoff
		*out = new(metav1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorHostStatus.
func (in *AmbassadorHostStatus) DeepCopy() *AmbassadorHostStatus {
	if in == nil {
		return nil
	}
	out := new(AmbassadorHostStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorListener) DeepCopyInto(out *AmbassadorListener) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(AmbassadorListenerSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorListener.
func (in *AmbassadorListener) DeepCopy() *AmbassadorListener {
	if in == nil {
		return nil
	}
	out := new(AmbassadorListener)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AmbassadorListener) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorListenerList) DeepCopyInto(out *AmbassadorListenerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AmbassadorListener, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorListenerList.
func (in *AmbassadorListenerList) DeepCopy() *AmbassadorListenerList {
	if in == nil {
		return nil
	}
	out := new(AmbassadorListenerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AmbassadorListenerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorListenerSpec) DeepCopyInto(out *AmbassadorListenerSpec) {
	*out = *in
	if in.AmbassadorID != nil {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		*out = make(v2.AmbassadorID, len(*in))
		copy(*out, *in)
	}
	if in.ProtocolStack != nil {
		in, out := &in.ProtocolStack, &out.ProtocolStack
		*out = make([]ProtocolStackElement, len(*in))
		copy(*out, *in)
	}
	in.HostBinding.DeepCopyInto(&out.HostBinding)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorListenerSpec.
func (in *AmbassadorListenerSpec) DeepCopy() *AmbassadorListenerSpec {
	if in == nil {
		return nil
	}
	out := new(AmbassadorListenerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorMapping) DeepCopyInto(out *AmbassadorMapping) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(AmbassadorMappingStatus)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorMapping.
func (in *AmbassadorMapping) DeepCopy() *AmbassadorMapping {
	if in == nil {
		return nil
	}
	out := new(AmbassadorMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AmbassadorMapping) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorMappingList) DeepCopyInto(out *AmbassadorMappingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AmbassadorMapping, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorMappingList.
func (in *AmbassadorMappingList) DeepCopy() *AmbassadorMappingList {
	if in == nil {
		return nil
	}
	out := new(AmbassadorMappingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AmbassadorMappingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorMappingSpec) DeepCopyInto(out *AmbassadorMappingSpec) {
	*out = *in
	if in.AmbassadorID != nil {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		*out = make(v2.AmbassadorID, len(*in))
		copy(*out, *in)
	}
	if in.PrefixRegex != nil {
		in, out := &in.PrefixRegex, &out.PrefixRegex
		*out = new(bool)
		**out = **in
	}
	if in.PrefixExact != nil {
		in, out := &in.PrefixExact, &out.PrefixExact
		*out = new(bool)
		**out = **in
	}
	if in.AddRequestHeaders != nil {
		in, out := &in.AddRequestHeaders, &out.AddRequestHeaders
		*out = make(map[string]AddedHeader, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.AddResponseHeaders != nil {
		in, out := &in.AddResponseHeaders, &out.AddResponseHeaders
		*out = make(map[string]AddedHeader, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.AddLinkerdHeaders != nil {
		in, out := &in.AddLinkerdHeaders, &out.AddLinkerdHeaders
		*out = new(bool)
		**out = **in
	}
	if in.AutoHostRewrite != nil {
		in, out := &in.AutoHostRewrite, &out.AutoHostRewrite
		*out = new(bool)
		**out = **in
	}
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Docs != nil {
		in, out := &in.Docs, &out.Docs
		*out = new(DocsInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableIPv4 != nil {
		in, out := &in.EnableIPv4, &out.EnableIPv4
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPv6 != nil {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = new(bool)
		**out = **in
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]*v2.CircuitBreaker, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(v2.CircuitBreaker)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.KeepAlive != nil {
		in, out := &in.KeepAlive, &out.KeepAlive
		*out = new(KeepAlive)
		(*in).DeepCopyInto(*out)
	}
	if in.CORS != nil {
		in, out := &in.CORS, &out.CORS
		*out = new(CORS)
		(*in).DeepCopyInto(*out)
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = new(RetryPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.GRPC != nil {
		in, out := &in.GRPC, &out.GRPC
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(bool)
		**out = **in
	}
	if in.MethodRegex != nil {
		in, out := &in.MethodRegex, &out.MethodRegex
		*out = new(bool)
		**out = **in
	}
	if in.RegexRedirect != nil {
		in, out := &in.RegexRedirect, &out.RegexRedirect
		*out = make(map[string]v2.BoolOrString, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(int)
		**out = **in
	}
	if in.Precedence != nil {
		in, out := &in.Precedence, &out.Precedence
		*out = new(int)
		**out = **in
	}
	if in.RemoveRequestHeaders != nil {
		in, out := &in.RemoveRequestHeaders, &out.RemoveRequestHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RemoveResponseHeaders != nil {
		in, out := &in.RemoveResponseHeaders, &out.RemoveResponseHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Rewrite != nil {
		in, out := &in.Rewrite, &out.Rewrite
		*out = new(string)
		**out = **in
	}
	if in.RegexRewrite != nil {
		in, out := &in.RegexRewrite, &out.RegexRewrite
		*out = make(map[string]v2.BoolOrString, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Shadow != nil {
		in, out := &in.Shadow, &out.Shadow
		*out = new(bool)
		**out = **in
	}
	if in.ConnectTimeoutMs != nil {
		in, out := &in.ConnectTimeoutMs, &out.ConnectTimeoutMs
		*out = new(int)
		**out = **in
	}
	if in.ClusterIdleTimeoutMs != nil {
		in, out := &in.ClusterIdleTimeoutMs, &out.ClusterIdleTimeoutMs
		*out = new(int)
		**out = **in
	}
	if in.TimeoutMs != nil {
		in, out := &in.TimeoutMs, &out.TimeoutMs
		*out = new(int)
		**out = **in
	}
	if in.IdleTimeoutMs != nil {
		in, out := &in.IdleTimeoutMs, &out.IdleTimeoutMs
		*out = new(int)
		**out = **in
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(v2.BoolOrString)
		(*in).DeepCopyInto(*out)
	}
	if in.UseWebsocket != nil {
		in, out := &in.UseWebsocket, &out.UseWebsocket
		*out = new(bool)
		**out = **in
	}
	if in.AllowUpgrade != nil {
		in, out := &in.AllowUpgrade, &out.AllowUpgrade
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int)
		**out = **in
	}
	if in.BypassAuth != nil {
		in, out := &in.BypassAuth, &out.BypassAuth
		*out = new(bool)
		**out = **in
	}
	if in.AuthContextExtensions != nil {
		in, out := &in.AuthContextExtensions, &out.AuthContextExtensions
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.BypassErrorResponseOverrides != nil {
		in, out := &in.BypassErrorResponseOverrides, &out.BypassErrorResponseOverrides
		*out = new(bool)
		**out = **in
	}
	if in.ErrorResponseOverrides != nil {
		in, out := &in.ErrorResponseOverrides, &out.ErrorResponseOverrides
		*out = make([]v2.ErrorResponseOverride, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Modules != nil {
		in, out := &in.Modules, &out.Modules
		*out = make([]v2.UntypedDict, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostRegex != nil {
		in, out := &in.HostRegex, &out.HostRegex
		*out = new(bool)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]v2.BoolOrString, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.RegexHeaders != nil {
		in, out := &in.RegexHeaders, &out.RegexHeaders
		*out = make(map[string]v2.BoolOrString, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(v2.DomainMap, len(*in))
		for key, val := range *in {
			var outVal []v2.MappingLabelGroup
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(v2.MappingLabelGroupsArray, len(*in))
				for i := range *in {
					if (*in)[i] != nil {
						in, out := &(*in)[i], &(*out)[i]
						*out = make(v2.MappingLabelGroup, len(*in))
						for key, val := range *in {
							var outVal []v2.MappingLabelSpecifier
							if val == nil {
								(*out)[key] = nil
							} else {
								in, out := &val, &outVal
								*out = make(v2.MappingLabelsArray, len(*in))
								for i := range *in {
									(*in)[i].DeepCopyInto(&(*out)[i])
								}
							}
							(*out)[key] = outVal
						}
					}
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.EnvoyOverride != nil {
		in, out := &in.EnvoyOverride, &out.EnvoyOverride
		*out = new(v2.UntypedDict)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = new(v2.LoadBalancer)
		(*in).DeepCopyInto(*out)
	}
	if in.QueryParameters != nil {
		in, out := &in.QueryParameters, &out.QueryParameters
		*out = make(map[string]v2.BoolOrString, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.RegexQueryParameters != nil {
		in, out := &in.RegexQueryParameters, &out.RegexQueryParameters
		*out = make(map[string]v2.BoolOrString, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorMappingSpec.
func (in *AmbassadorMappingSpec) DeepCopy() *AmbassadorMappingSpec {
	if in == nil {
		return nil
	}
	out := new(AmbassadorMappingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorMappingStatus) DeepCopyInto(out *AmbassadorMappingStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorMappingStatus.
func (in *AmbassadorMappingStatus) DeepCopy() *AmbassadorMappingStatus {
	if in == nil {
		return nil
	}
	out := new(AmbassadorMappingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorTCPMapping) DeepCopyInto(out *AmbassadorTCPMapping) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorTCPMapping.
func (in *AmbassadorTCPMapping) DeepCopy() *AmbassadorTCPMapping {
	if in == nil {
		return nil
	}
	out := new(AmbassadorTCPMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AmbassadorTCPMapping) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorTCPMappingList) DeepCopyInto(out *AmbassadorTCPMappingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AmbassadorTCPMapping, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorTCPMappingList.
func (in *AmbassadorTCPMappingList) DeepCopy() *AmbassadorTCPMappingList {
	if in == nil {
		return nil
	}
	out := new(AmbassadorTCPMappingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AmbassadorTCPMappingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmbassadorTCPMappingSpec) DeepCopyInto(out *AmbassadorTCPMappingSpec) {
	*out = *in
	if in.AmbassadorID != nil {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		*out = make(v2.AmbassadorID, len(*in))
		copy(*out, *in)
	}
	if in.EnableIPv4 != nil {
		in, out := &in.EnableIPv4, &out.EnableIPv4
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPv6 != nil {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = new(bool)
		**out = **in
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]v2.CircuitBreaker, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(v2.BoolOrString)
		(*in).DeepCopyInto(*out)
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmbassadorTCPMappingSpec.
func (in *AmbassadorTCPMappingSpec) DeepCopy() *AmbassadorTCPMappingSpec {
	if in == nil {
		return nil
	}
	out := new(AmbassadorTCPMappingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CORS) DeepCopyInto(out *CORS) {
	*out = *in
	if in.Origins != nil {
		in, out := &in.Origins, &out.Origins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Methods != nil {
		in, out := &in.Methods, &out.Methods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(bool)
		**out = **in
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CORS.
func (in *CORS) DeepCopy() *CORS {
	if in == nil {
		return nil
	}
	out := new(CORS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocsInfo) DeepCopyInto(out *DocsInfo) {
	*out = *in
	if in.Ignored != nil {
		in, out := &in.Ignored, &out.Ignored
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocsInfo.
func (in *DocsInfo) DeepCopy() *DocsInfo {
	if in == nil {
		return nil
	}
	out := new(DocsInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Foo) DeepCopyInto(out *Foo) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Foo.
func (in *Foo) DeepCopy() *Foo {
	if in == nil {
		return nil
	}
	out := new(Foo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Foo) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FooList) DeepCopyInto(out *FooList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Foo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FooList.
func (in *FooList) DeepCopy() *FooList {
	if in == nil {
		return nil
	}
	out := new(FooList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FooList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FooSpec) DeepCopyInto(out *FooSpec) {
	*out = *in
	if in.AmbassadorID != nil {
		in, out := &in.AmbassadorID, &out.AmbassadorID
		*out = make(v2.AmbassadorID, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FooSpec.
func (in *FooSpec) DeepCopy() *FooSpec {
	if in == nil {
		return nil
	}
	out := new(FooSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostBindingType) DeepCopyInto(out *HostBindingType) {
	*out = *in
	out.Namespace = in.Namespace
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostBindingType.
func (in *HostBindingType) DeepCopy() *HostBindingType {
	if in == nil {
		return nil
	}
	out := new(HostBindingType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InsecureRequestPolicy) DeepCopyInto(out *InsecureRequestPolicy) {
	*out = *in
	if in.AdditionalPort != nil {
		in, out := &in.AdditionalPort, &out.AdditionalPort
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InsecureRequestPolicy.
func (in *InsecureRequestPolicy) DeepCopy() *InsecureRequestPolicy {
	if in == nil {
		return nil
	}
	out := new(InsecureRequestPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeepAlive) DeepCopyInto(out *KeepAlive) {
	*out = *in
	if in.Probes != nil {
		in, out := &in.Probes, &out.Probes
		*out = new(int)
		**out = **in
	}
	if in.IdleTime != nil {
		in, out := &in.IdleTime, &out.IdleTime
		*out = new(int)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeepAlive.
func (in *KeepAlive) DeepCopy() *KeepAlive {
	if in == nil {
		return nil
	}
	out := new(KeepAlive)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancer) DeepCopyInto(out *LoadBalancer) {
	*out = *in
	if in.Cookie != nil {
		in, out := &in.Cookie, &out.Cookie
		*out = new(LoadBalancerCookie)
		**out = **in
	}
	if in.SourceIp != nil {
		in, out := &in.SourceIp, &out.SourceIp
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancer.
func (in *LoadBalancer) DeepCopy() *LoadBalancer {
	if in == nil {
		return nil
	}
	out := new(LoadBalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerCookie) DeepCopyInto(out *LoadBalancerCookie) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerCookie.
func (in *LoadBalancerCookie) DeepCopy() *LoadBalancerCookie {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerCookie)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceBindingType) DeepCopyInto(out *NamespaceBindingType) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceBindingType.
func (in *NamespaceBindingType) DeepCopy() *NamespaceBindingType {
	if in == nil {
		return nil
	}
	out := new(NamespaceBindingType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreviewURLSpec) DeepCopyInto(out *PreviewURLSpec) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreviewURLSpec.
func (in *PreviewURLSpec) DeepCopy() *PreviewURLSpec {
	if in == nil {
		return nil
	}
	out := new(PreviewURLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestPolicy) DeepCopyInto(out *RequestPolicy) {
	*out = *in
	in.Insecure.DeepCopyInto(&out.Insecure)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestPolicy.
func (in *RequestPolicy) DeepCopy() *RequestPolicy {
	if in == nil {
		return nil
	}
	out := new(RequestPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicy) DeepCopyInto(out *RetryPolicy) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicy.
func (in *RetryPolicy) DeepCopy() *RetryPolicy {
	if in == nil {
		return nil
	}
	out := new(RetryPolicy)
	in.DeepCopyInto(out)
	return out
}
